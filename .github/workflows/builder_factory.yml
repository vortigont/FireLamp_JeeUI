# CI Build runner with Platformio
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# https://docs.platformio.org/en/latest/integration/ci/github-actions.html

name: PlatformIO Factory images builder

# workdir
# /home/runner/work/FireLamp_JeeUI/FireLamp_JeeUI

on:
  workflow_dispatch:      # Manual start

# one task per branch/env at a time
#concurrency:
#  group: environment-${{ github.ref }}
#  cancel-in-progress: true

jobs:
  factory_image:
    runs-on: ubuntu-latest
    if: github.repository == 'vortigont/FireLamp_JeeUI'
    continue-on-error: false
#    strategy:
#      matrix:
#        variant:
#          - esp32_4M
#          - esp32_4M_debug
#          - esp32S3_4M
#          - esp32S3_4M_debug
#          - esp32S3_16M
#          - esp32S3_16M_debug

    steps:
      - uses: actions/checkout@v4
      - name: PIP Cache
        id: cache-pip
        uses: actions/cache@v4
        env:
          cache-name: cache-pip-pkgs
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{env.cache-name}}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Platformio Cache
        id: pio-pp
        uses: actions/cache@v4
        env:
          cache-name: cache-pio-pkgs
        with:
          path: |
            ~/.platformio/platforms
            ~/.platformio/packages
          key: ${{ runner.os }}-pio-${{env.cache-name}}
          restore-keys: |
            ${{ runner.os }}-pio-
#           Linux-pio-cache-pio-pkgs, Linux-pio-, Linux-
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'
      - name: Install Platformio
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
          pip install --upgrade zopfli
          platformio run -t buildfs
          #platformio pkg update
      - name: Run PlatformIO build
        run: |
          platformio run -e esp32_4M -e esp32_16M -e esp32S3_4M -e esp32S3_16M
#         platformio run -e ${{ matrix.variant }}
      - name: Collect build images
        run: |
          mkdir ~/artifacts
          pwd
          find ~/ -name 'factory.*.bin'
          find ~/ -name 'firmware.*.bin'
          find .pio/build/ -name "factory.*.bin" -exec mv -t ~/artifacts/ {} +
          find .pio/build/ -name "firmware.*.bin" -exec mv -t ~/artifacts/ {} +
      - name: Upload Factory Artifacts
        uses: actions/upload-artifact@v4
        id: artifact-factory-upload-step
        with:
          name: factory_images
          path: ~/artifacts/factory.*.bin
          compression-level: 9 # maximum compression
      - name: Upload OTA Firmware Artifacts
        uses: actions/upload-artifact@v4
        id: artifact-ota-upload-step
        with:
          name: firmware_images
          path: ~/artifacts/firmware.*.bin
          compression-level: 9 # maximum compression
      - name: Output factory artifact IDs
        run:  echo 'Factory Artifact ID is ${{ steps.artifact-factory-upload-step.artifact-id }}'
      - name: Output firmware artifact IDs
        run:  echo 'Firmware Artifact ID is ${{ steps.artifact-ota-upload-step.artifact-id }}'
